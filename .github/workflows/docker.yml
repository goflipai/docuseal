name: Build Docker Image

on:
  workflow_call:
    inputs:
      sync:
        description: 'Build and push Docker image'
        required: false
        default: true
        type: boolean
      tag_override:
        description: 'Override image tag (optional)'
        required: false
        type: string
  workflow_dispatch:
    inputs:
      sync:
        description: 'Build and push Docker image'
        required: false
        default: true
        type: boolean
      tag_override:
        description: 'Override image tag (optional)'
        required: false
        default: ''
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      ecr_repository: oci://358252705848.dkr.ecr.us-gov-west-1.amazonaws.com/docuseal

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          # Uncomment this if running locally with act
          # aws-session-token: ${{ secrets.SESSION_TOKEN }}
          aws-region: us-gov-west-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get latest tag
        id: latest-tag
        run: |
          if [ -n "${{ github.event.inputs.tag_override }}" ]; then
            echo "Using overridden tag: ${{ github.event.inputs.tag_override }}"
            echo "tag=${{ github.event.inputs.tag_override }}" >> $GITHUB_OUTPUT
          else
            tag=$(git tag -l | sort -V | tail -n 1)
            echo "Using latest git tag: $tag"
            echo "tag=$tag" >> $GITHUB_OUTPUT
          fi

      - name: Build and push image
        run: |
          docker build -t ${{ env.ecr_repository }}:${{ steps.latest-tag.outputs.tag }} .
          docker push ${{ env.ecr_repository }}:${{ steps.latest-tag.outputs.tag }}

      # Slack notifications for both success and failure
      - name: Slack Notification
        if: always() && !env.ACT
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,workflow
          channel: '#github-deploys'
          text: |
            ${{ job.status == 'success' && 'Docuseal image built and pushed to ECR successfully :white_check_mark:' || 'Docuseal image build and push failed :x:' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_GITHUB_CHANNEL_WEBHOOK_URL }}
